= simple_form_for(@admin_device_ware, url: (@admin_device_ware.new_record? ? admin_device_wares_path(category: params[:category]) : admin_device_ware_path(@admin_device_ware, category: params[:category]) ), :html => { id: 'form', class: 'form-horizontal' } ) do |f|
  = f.error_notification

  .form-inputs
    - if params[:category] == 'hw'
      = f.hidden_field :category, :value => 'hw'
      .hr-line-dashed
      .form-group
        = f.label :version, :class => 'col-sm-2 control-label'
        = f.input :version, autofocus: true, wrapper_html: { class: 'col-sm-10' }, label: false, required: true,
                  input_html: { maxlength: 4 }
      .hr-line-dashed
      .form-group
        = f.label :name, :class => 'col-sm-2 control-label'
        = f.input :name, wrapper_html: { class: 'col-sm-10' }, label: false, required: true, :placeholder => '품명'
      .hr-line-dashed
      .form-group
        = f.label :spec, :class => 'col-sm-2 control-label'
        = f.input :spec, wrapper_html: { class: 'col-sm-10' }, label: false, required: true, :placeholder => '규격'
      .hr-line-dashed
      .form-group
        = f.label :serial, :class => 'col-sm-2 control-label'
        = f.input :serial, wrapper_html: { class: 'col-sm-10' }, label: false, required: true, :placeholder => '모델시리얼'
      .hr-line-dashed
      .form-group
        = f.label :grade, :class => 'col-sm-2 control-label'
        = f.input :grade, wrapper_html: { class: 'col-sm-10' }, label: false, required: true, :placeholder => '등급',
                  as: :select,
                  collection: [['A', 1], ['B', 2], ['C', 3]]
      .hr-line-dashed
      .form-group
        = f.label :expired_at, :class => 'col-sm-2 control-label'
        = f.input :expired_at, as: 'string', wrapper_html: { class: 'col-sm-10' }, label: false, required: true, :placeholder => '유효기간',
                  input_html: { class: 'datepicker date' }
      .hr-line-dashed
      .form-group
        = f.label :purchased_at, :class => 'col-sm-2 control-label'
        = f.input :purchased_at, as: 'string', wrapper_html: { class: 'col-sm-10' }, label: false, required: true, :placeholder => '구입년도',
                  input_html: { class: 'datepicker date' }
      .hr-line-dashed
      .form-group
        = f.label :check_period, :class => 'col-sm-2 control-label'
        = f.input :check_period, wrapper_html: { class: 'col-sm-10' }, label: false, required: true, :placeholder => '점검주기'
      .hr-line-dashed
      .form-group
        = f.label :note, :class => 'col-sm-2 control-label'
        = f.input :note, wrapper_html: { class: 'col-sm-10' }, label: false, required: true, :placeholder => '비고'

    - if params[:category] == 'sw'
      = f.hidden_field :category, :value => 'sw'
      .hr-line-dashed
      .form-group
        = f.label :version, :class => 'col-sm-2 control-label'
        = f.input :version, autofocus: true, wrapper_html: { class: 'col-sm-10' }, label: false, required: true, :placeholder => '관리번호'
      .hr-line-dashed
      .form-group
        = f.label :os, :class => 'col-sm-2 control-label'
        = f.input :os, wrapper_html: { class: 'col-sm-10' }, label: false, required: true, :placeholder => 'OS'
      .hr-line-dashed
      .form-group
        = f.label :application, :class => 'col-sm-2 control-label'
        = f.input :application, wrapper_html: {class: 'col-sm-10'}, label: false, required: true, :placeholder => '응용프로그램'
      .hr-line-dashed
      .form-group
        = f.label :acquired_at, :class => 'col-sm-2 control-label'
        = f.input :acquired_at, as: :string, wrapper_html: {class: 'col-sm-10'}, label: false, required: true, :placeholder => '취득일자',
                  input_html: { class: 'datepicker date' }
      .hr-line-dashed
      .form-group
        = f.label :distributed_at, :class => 'col-sm-2 control-label'
        = f.input :distributed_at, as: :string, wrapper_html: {class: 'col-sm-10'}, label: false, required: true, :placeholder => '배포일자',
                  input_html: { class: 'datepicker date' }
      .hr-line-dashed
      .form-group
        = f.label :note, :class => 'col-sm-2 control-label'
        = f.input :note, wrapper_html: {class: 'col-sm-10'}, label: false, required: true, :placeholder => '비고'

    - if params[:category] == 'fw'
      = f.hidden_field :category, :value => 'fw'
      .hr-line-dashed
      .form-group
        = f.label :version, :class => 'col-sm-2 control-label'
        = f.input :version, autofocus: true, wrapper_html: {class: 'col-sm-10'}, label: false, required: true, :placeholder => '관리번호'
      .hr-line-dashed
      .form-group
        = f.label :tag, :class => 'col-sm-2 control-label'
        = f.input :tag, wrapper_html: {class: 'col-sm-10'}, label: false, required: true, :placeholder => '분류'
      .hr-line-dashed
      .form-group
        = f.label :application, :class => 'col-sm-2 control-label'
        = f.input :application, wrapper_html: {class: 'col-sm-10'}, label: false, required: true, :placeholder => '응용프로그램'
      .hr-line-dashed
      .form-group
        = f.label :distributed_at, :class => 'col-sm-2 control-label'
        = f.input :distributed_at, as: :string, wrapper_html: {class: 'col-sm-10'}, label: false, required: true, :placeholder => '배포일자',
                  input_html: { class: 'datepicker date' }
      .hr-line-dashed
      .form-group
        = f.label :note, :class => 'col-sm-2 control-label'
        = f.input :note, wrapper_html: {class: 'col-sm-10'}, label: false, required: true, :placeholder => '비고'
  .form-actions
    = f.submit @admin_device_ware.new_record? ? '등록' : '수정', :class => 'btn btn-primary'

- content_for :javascript do
  javascript:
    $(function() {
      $('.form-group > .form-group').removeClass('form-group');

      $('#form').validate({
        errorPlacement: function (error, element) {
          element.before(error);
        },
        rules: {
          version: 'required'
        },
        messages: {
          version: {
            required: 'plz'
          }
        },
        showErrors: function (errorMap, errorList) {

          // Clean up any tooltips for valid elements
          $.each(this.validElements(), function (index, element) {
            var $element = $(element);

            $element.data("title", "") // Clear the title - there is no error associated anymore
                    .removeClass("error")
                    .tooltip("destroy");
          });

          // Create new tooltips for invalid elements
          $.each(errorList, function (index, error) {
            var $element = $(error.element);

            $element.tooltip("destroy") // Destroy any pre-existing tooltip so we can repopulate with new tooltip content
                    .data("title", error.message)
                    .addClass("error")
                    .tooltip(); // Create a new tooltip based on the error message we just set in the title
          });
        }
      });

      $('.datepicker').datepicker({
        format: 'yyyy-mm-dd',
        todayBtn: 'linked',
        keyboardNavigation: false,
        forceParse: false,
        calendarWeeks: true,
        language: 'ko',
        autoclose: true,
        startDate: '+0d'
      });
    });